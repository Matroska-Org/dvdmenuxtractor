# =========================================================================
#     This makefile was generated by
#     Bakefile 0.1.4 (http://bakefile.sourceforge.net)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# C compiler 
CC = cl

# Standard flags for CC 
CFLAGS = 

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS = 

# Standard linker flags 
LDFLAGS = 

# Type of compiled binaries [debug,release]
BUILD = release

# Link the debug output somewhere else 
LOG_ERROR = internal_error



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

LIBDVDREAD_CFLAGS = /MD$(__DEBUG_FLAG_8) /DWIN32 $(__DEBUG_FLAG) \
	/Fdbuild\libdvdread.pdb $(____DEBUG_FLAG) $(__OPTIMIZE) /DHAVE_CONFIG_H \
	/DLOG_ERROR=$(LOG_ERROR) /Iwin32 /I. $(CPPFLAGS) $(CFLAGS)
LIBDVDREAD_OBJECTS =  \
	build\libdvdread_ifo_read.obj \
	build\libdvdread_dvd_udf.obj \
	build\libdvdread_ifo_print.obj \
	build\libdvdread_nav_read.obj \
	build\libdvdread_nav_print.obj \
	build\libdvdread_md5.obj \
	build\libdvdread_dvd_reader.obj \
	build\libdvdread_dvd_input.obj \
	build\libdvdread_dirent.obj
DISC_ID_CFLAGS = /MD$(__DEBUG_FLAG_8) /DWIN32 $(__DEBUG_FLAG) \
	/Fdbuild\disc_id.pdb $(____DEBUG_FLAG) $(__OPTIMIZE) /Iwin32 /I. $(CPPFLAGS) \
	$(CFLAGS)
DISC_ID_OBJECTS =  \
	build\disc_id_disc_id.obj
IFO_DUMP_CFLAGS = /MD$(__DEBUG_FLAG_8) /DWIN32 $(__DEBUG_FLAG) \
	/Fdbuild\ifo_dump.pdb $(____DEBUG_FLAG) $(__OPTIMIZE) /Iwin32 /I. $(CPPFLAGS) \
	$(CFLAGS)
IFO_DUMP_OBJECTS =  \
	build\ifo_dump_ifo_dump.obj
PLAY_TITLE_CFLAGS = /MD$(__DEBUG_FLAG_8) /DWIN32 $(__DEBUG_FLAG) \
	/Fdbuild\play_title.pdb $(____DEBUG_FLAG) $(__OPTIMIZE) /Iwin32 /I. \
	$(CPPFLAGS) $(CFLAGS)
PLAY_TITLE_OBJECTS =  \
	build\play_title_play_title.obj
TITLE_INFO_CFLAGS = /MD$(__DEBUG_FLAG_8) /DWIN32 $(__DEBUG_FLAG) \
	/Fdbuild\title_info.pdb $(____DEBUG_FLAG) $(__OPTIMIZE) /Iwin32 /I. \
	$(CPPFLAGS) $(CFLAGS)
TITLE_INFO_OBJECTS =  \
	build\title_info_title_info.obj

### Conditionally set variables: ###

!if "$(BUILD)" == "debug"
__DEBUG_FLAG = /Zi
!endif
!if "$(BUILD)" == "release"
__DEBUG_FLAG = 
!endif
!if "$(BUILD)" == "debug"
__DEBUG_FLAG_7 = /DEBUG
!endif
!if "$(BUILD)" == "release"
__DEBUG_FLAG_7 = 
!endif
!if "$(BUILD)" == "debug"
____DEBUG_FLAG = /D_DEBUG
!endif
!if "$(BUILD)" == "release"
____DEBUG_FLAG = 
!endif
!if "$(BUILD)" == "debug"
__DEBUG_FLAG_8 = d
!endif
!if "$(BUILD)" == "release"
__DEBUG_FLAG_8 = 
!endif
!if "$(BUILD)" == "debug"
__OPTIMIZE = /Od
!endif
!if "$(BUILD)" == "release"
__OPTIMIZE = /O2
!endif


all: build
build:
	-if not exist build mkdir build

### Targets: ###

all: build\libdvdread.lib build\disc_id.exe build\ifo_dump.exe build\play_title.exe build\title_info.exe

clean: 
	-if exist build\*.obj del build\*.obj
	-if exist build\*.res del build\*.res
	-if exist build\libdvdread.lib del build\libdvdread.lib
	-if exist build\disc_id.exe del build\disc_id.exe
	-if exist build\disc_id.ilk del build\disc_id.ilk
	-if exist build\disc_id.pdb del build\disc_id.pdb
	-if exist build\ifo_dump.exe del build\ifo_dump.exe
	-if exist build\ifo_dump.ilk del build\ifo_dump.ilk
	-if exist build\ifo_dump.pdb del build\ifo_dump.pdb
	-if exist build\play_title.exe del build\play_title.exe
	-if exist build\play_title.ilk del build\play_title.ilk
	-if exist build\play_title.pdb del build\play_title.pdb
	-if exist build\title_info.exe del build\title_info.exe
	-if exist build\title_info.ilk del build\title_info.ilk
	-if exist build\title_info.pdb del build\title_info.pdb

build\libdvdread.lib: $(LIBDVDREAD_OBJECTS)
	if exist $@ del $@
	lib /NOLOGO /OUT:$@ @<<
	$(LIBDVDREAD_OBJECTS)
<<

build\disc_id.exe: $(DISC_ID_OBJECTS) build\libdvdread.lib
	link /NOLOGO /OUT:$@ $(LDFLAGS) $(__DEBUG_FLAG_7) /LIBPATH:build @<<
	$(DISC_ID_OBJECTS)  libdvdread.lib
<<

build\ifo_dump.exe: $(IFO_DUMP_OBJECTS) build\libdvdread.lib
	link /NOLOGO /OUT:$@ $(LDFLAGS) $(__DEBUG_FLAG_7) /LIBPATH:build @<<
	$(IFO_DUMP_OBJECTS)  libdvdread.lib
<<

build\play_title.exe: $(PLAY_TITLE_OBJECTS) build\libdvdread.lib
	link /NOLOGO /OUT:$@ $(LDFLAGS) $(__DEBUG_FLAG_7) /LIBPATH:build @<<
	$(PLAY_TITLE_OBJECTS)  libdvdread.lib
<<

build\title_info.exe: $(TITLE_INFO_OBJECTS) build\libdvdread.lib
	link /NOLOGO /OUT:$@ $(LDFLAGS) $(__DEBUG_FLAG_7) /LIBPATH:build @<<
	$(TITLE_INFO_OBJECTS)  libdvdread.lib
<<

build\libdvdread_ifo_read.obj: .\dvdread\ifo_read.c
	$(CC) /c /nologo /TC /Fo$@ $(LIBDVDREAD_CFLAGS) $**

build\libdvdread_dvd_udf.obj: .\dvdread\dvd_udf.c
	$(CC) /c /nologo /TC /Fo$@ $(LIBDVDREAD_CFLAGS) $**

build\libdvdread_ifo_print.obj: .\dvdread\ifo_print.c
	$(CC) /c /nologo /TC /Fo$@ $(LIBDVDREAD_CFLAGS) $**

build\libdvdread_nav_read.obj: .\dvdread\nav_read.c
	$(CC) /c /nologo /TC /Fo$@ $(LIBDVDREAD_CFLAGS) $**

build\libdvdread_nav_print.obj: .\dvdread\nav_print.c
	$(CC) /c /nologo /TC /Fo$@ $(LIBDVDREAD_CFLAGS) $**

build\libdvdread_md5.obj: .\dvdread\md5.c
	$(CC) /c /nologo /TC /Fo$@ $(LIBDVDREAD_CFLAGS) $**

build\libdvdread_dvd_reader.obj: .\dvdread\dvd_reader.c
	$(CC) /c /nologo /TC /Fo$@ $(LIBDVDREAD_CFLAGS) $**

build\libdvdread_dvd_input.obj: .\dvdread\dvd_input.c
	$(CC) /c /nologo /TC /Fo$@ $(LIBDVDREAD_CFLAGS) $**

build\libdvdread_dirent.obj: .\win32\dirent.c
	$(CC) /c /nologo /TC /Fo$@ $(LIBDVDREAD_CFLAGS) $**

build\disc_id_disc_id.obj: .\src\disc_id.c
	$(CC) /c /nologo /TC /Fo$@ $(DISC_ID_CFLAGS) $**

build\ifo_dump_ifo_dump.obj: .\src\ifo_dump.c
	$(CC) /c /nologo /TC /Fo$@ $(IFO_DUMP_CFLAGS) $**

build\play_title_play_title.obj: .\src\play_title.c
	$(CC) /c /nologo /TC /Fo$@ $(PLAY_TITLE_CFLAGS) $**

build\title_info_title_info.obj: .\src\title_info.c
	$(CC) /c /nologo /TC /Fo$@ $(TITLE_INFO_CFLAGS) $**
